# Generated by Django 5.0.6 on 2025-08-27 14:32

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('POSMagicApp', '0017_alter_customer_profile_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_per_order', models.PositiveIntegerField(default=10, help_text='Fixed points awarded per order')),
                ('points_per_currency_unit', models.DecimalField(decimal_places=2, default=Decimal('0.01'), help_text='Points per currency unit spent (e.g., 1 point per 100 UGX)', max_digits=5)),
                ('calculation_method', models.CharField(choices=[('FIXED', 'Fixed Points per Order'), ('PERCENTAGE', 'Percentage of Order Value'), ('TIERED', 'Tiered Based on Order Value')], default='FIXED', max_length=20)),
                ('birthday_bonus_multiplier', models.DecimalField(decimal_places=1, default=Decimal('2.0'), help_text='Multiplier for birthday month (e.g., 2.0 = double points)', max_digits=3)),
                ('weekend_bonus_multiplier', models.DecimalField(decimal_places=1, default=Decimal('1.5'), help_text='Multiplier for weekend orders', max_digits=3)),
                ('loyalty_tier_bonus', models.BooleanField(default=True, help_text='Enable bonus points for loyal customers')),
                ('points_redemption_enabled', models.BooleanField(default=True)),
                ('points_to_currency_ratio', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Points needed for 1 currency unit (e.g., 100 points = 1 UGX)', max_digits=8)),
                ('minimum_points_redemption', models.PositiveIntegerField(default=500, help_text='Minimum points required to redeem')),
                ('points_expiry_months', models.PositiveIntegerField(default=12, help_text='Months until points expire (0 = never)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Loyalty Settings',
                'verbose_name_plural': 'Loyalty Settings',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='joined_loyalty_date',
            field=models.DateTimeField(auto_now_add=True, help_text='When customer joined loyalty program', null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='loyalty_points',
            field=models.PositiveIntegerField(default=0, help_text='Current available loyalty points'),
        ),
        migrations.AddField(
            model_name='customer',
            name='loyalty_tier',
            field=models.CharField(default='BRONZE', help_text='Customer loyalty tier', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='total_points_earned',
            field=models.PositiveIntegerField(default=0, help_text='Total points earned over lifetime'),
        ),
        migrations.AddField(
            model_name='customer',
            name='total_points_redeemed',
            field=models.PositiveIntegerField(default=0, help_text='Total points redeemed over lifetime'),
        ),
        migrations.CreateModel(
            name='CustomerLoyaltyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('EARNED', 'Points Earned'), ('REDEEMED', 'Points Redeemed'), ('EXPIRED', 'Points Expired'), ('ADJUSTED', 'Manual Adjustment'), ('BONUS', 'Bonus Points')], max_length=20)),
                ('points', models.IntegerField(help_text='Positive for earned/bonus, negative for redeemed/expired')),
                ('order_reference', models.CharField(blank=True, help_text='Reference to order/transaction that generated points', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When these points expire', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_transactions', to='POSMagicApp.customer')),
            ],
            options={
                'verbose_name': 'Loyalty Transaction',
                'verbose_name_plural': 'Loyalty Transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
