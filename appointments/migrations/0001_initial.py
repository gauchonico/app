# Generated by Django 5.0.6 on 2025-09-30 18:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('POSMagicApp', '0018_loyaltysettings_customer_joined_loyalty_date_and_more'),
        ('production', '0193_productsalepayment_productsalereceipt'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.CharField(blank=True, editable=False, max_length=20, unique=True)),
                ('is_out_of_salon', models.BooleanField(default=False, help_text='Whether this is an out-of-salon appointment')),
                ('out_of_salon_address', models.TextField(blank=True, help_text='Address for out-of-salon appointments')),
                ('appointment_date', models.DateField(help_text='Date of the appointment')),
                ('appointment_time', models.TimeField(help_text='Time of the appointment')),
                ('duration_minutes', models.PositiveIntegerField(default=60, help_text='Expected duration in minutes')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('not_required', 'Not Required'), ('pending', 'Pending Payment'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='not_required', max_length=20)),
                ('customer_name', models.CharField(help_text='Customer name for the appointment', max_length=200)),
                ('customer_phone', models.CharField(help_text='Customer phone number', max_length=20)),
                ('customer_email', models.EmailField(blank=True, help_text='Customer email address', max_length=254, null=True)),
                ('special_requests', models.TextField(blank=True, help_text='Any special requests or notes for the appointment')),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0, help_text='Estimated cost of services', max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, help_text='Deposit amount paid', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='When the appointment was confirmed', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the appointment was completed', null=True)),
                ('assigned_staff', models.ManyToManyField(blank=True, help_text='Staff members assigned to this appointment', related_name='assigned_appointments', to='POSMagicApp.staff')),
                ('created_by', models.ForeignKey(blank=True, help_text='Staff member who created this appointment', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='POSMagicApp.customer')),
                ('services', models.ManyToManyField(help_text='Services requested for this appointment', related_name='appointments', to='production.servicename')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='production.store')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Overall rating of the appointment')),
                ('service_quality', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating for service quality')),
                ('staff_friendliness', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating for staff friendliness')),
                ('cleanliness', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating for cleanliness')),
                ('value_for_money', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating for value for money')),
                ('comments', models.TextField(blank=True, help_text='Additional comments or feedback')),
                ('would_recommend', models.BooleanField(default=True, help_text='Would you recommend us to others?')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='appointments.appointment')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call')], max_length=10)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('sent_to', models.CharField(help_text='Email or phone number the reminder was sent to', max_length=200)),
                ('message', models.TextField(help_text='The reminder message sent')),
                ('is_delivered', models.BooleanField(default=False)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
    ]
