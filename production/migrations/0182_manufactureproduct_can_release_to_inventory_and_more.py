# Generated by Django 5.0.6 on 2025-08-22 20:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('production', '0181_creditnote'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='manufactureproduct',
            name='can_release_to_inventory',
            field=models.BooleanField(default=False, help_text='Whether this batch can be released to inventory'),
        ),
        migrations.AddField(
            model_name='manufactureproduct',
            name='qc_required',
            field=models.BooleanField(default=True, help_text='Whether this batch requires quality control testing'),
        ),
        migrations.AddField(
            model_name='manufactureproduct',
            name='qc_sample_quantity',
            field=models.PositiveIntegerField(default=0, help_text='Number of sample bottles to allocate for QC'),
        ),
        migrations.AddField(
            model_name='manufactureproduct',
            name='qc_status',
            field=models.CharField(choices=[('pending', 'QC Pending'), ('in_progress', 'QC In Progress'), ('passed', 'QC Passed'), ('failed', 'QC Failed'), ('on_hold', 'QC On Hold'), ('not_required', 'QC Not Required')], default='pending', max_length=20),
        ),
        migrations.CreateModel(
            name='QualityControlTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('test_name', models.CharField(default='Standard Quality Test', max_length=255)),
                ('sample_quantity', models.PositiveIntegerField(help_text='Number of sample bottles allocated for testing')),
                ('sample_taken_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_test_date', models.DateTimeField(blank=True, null=True)),
                ('actual_test_date', models.DateTimeField(blank=True, null=True)),
                ('testing_duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Testing'), ('in_progress', 'Testing In Progress'), ('completed', 'Testing Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('overall_result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('conditional_pass', 'Conditional Pass'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('pass_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('testing_notes', models.TextField(blank=True, help_text='General testing observations and notes')),
                ('failure_reasons', models.TextField(blank=True, help_text='Detailed reasons if test fails')),
                ('recommendations', models.TextField(blank=True, help_text='QC recommendations and actions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_quality_tests', to=settings.AUTH_USER_MODEL)),
                ('assigned_tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quality_tests', to=settings.AUTH_USER_MODEL)),
                ('manufactured_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_tests', to='production.manufactureproduct')),
            ],
            options={
                'verbose_name': 'Quality Control Test',
                'verbose_name_plural': 'Quality Control Tests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityControlAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('release', 'Release to Inventory'), ('hold', 'Hold for Further Testing'), ('rework', 'Rework Required'), ('discard', 'Discard Batch'), ('conditional_release', 'Conditional Release'), ('quarantine', 'Quarantine')], max_length=30)),
                ('action_reason', models.TextField()),
                ('quantity_affected', models.PositiveIntegerField(help_text='Units affected by this action')),
                ('action_date', models.DateTimeField(auto_now_add=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_notes', models.TextField(blank=True)),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('quality_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qc_actions', to='production.qualitycontroltest')),
            ],
            options={
                'ordering': ['-action_date'],
            },
        ),
        migrations.CreateModel(
            name='QualityTestParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=100)),
                ('parameter_type', models.CharField(choices=[('physical', 'Physical'), ('chemical', 'Chemical'), ('microbiological', 'Microbiological'), ('sensory', 'Sensory'), ('performance', 'Performance')], max_length=20)),
                ('measurement_unit', models.CharField(choices=[('ph', 'pH'), ('percentage', '%'), ('mg_per_ml', 'mg/ml'), ('ppm', 'PPM'), ('visual', 'Visual'), ('pass_fail', 'Pass/Fail'), ('numeric', 'Numeric'), ('text', 'Text')], max_length=20)),
                ('target_value', models.CharField(blank=True, help_text='Target or expected value', max_length=100)),
                ('min_acceptable', models.CharField(blank=True, max_length=100)),
                ('max_acceptable', models.CharField(blank=True, max_length=100)),
                ('measured_value', models.CharField(blank=True, max_length=100)),
                ('result_status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('na', 'N/A')], default='na', max_length=20)),
                ('test_method', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('tested_at', models.DateTimeField(blank=True, null=True)),
                ('quality_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_parameters', to='production.qualitycontroltest')),
                ('tested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['parameter_name'],
            },
        ),
        migrations.CreateModel(
            name='SampleAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('quantity_allocated', models.PositiveIntegerField()),
                ('allocation_date', models.DateTimeField(auto_now_add=True)),
                ('storage_location', models.CharField(blank=True, max_length=255)),
                ('storage_temperature', models.CharField(blank=True, max_length=50)),
                ('special_handling_notes', models.TextField(blank=True)),
                ('is_used', models.BooleanField(default=False)),
                ('used_date', models.DateTimeField(blank=True, null=True)),
                ('sample_expiry_date', models.DateField(blank=True, null=True)),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('manufactured_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_allocations', to='production.manufactureproduct')),
            ],
            options={
                'ordering': ['-allocation_date'],
            },
        ),
    ]
